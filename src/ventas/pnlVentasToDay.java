/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ventas;

import alertas.Cargando;
import alertas.ErrorAlert;
import conexion.ConexionBD;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.ActionEvent;
import java.awt.event.InputEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.KeyStroke;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JRViewer;
import reportes.Reportes;

/**
 *
 * @author RojeruSan
 */
public class pnlVentasToDay extends javax.swing.JPanel {

    private int PosicionMouse;
    public static alertas.Cargando c = new Cargando(new JFrame(), true);
    public static int cantidad = 0;
    public static int id = 0;
    public static String motivo = null;

    /**
     * Creates new form pnlVentasToDay
     */
    public pnlVentasToDay() {
        initComponents();

        if (conexion.ConexionBD.conect == null) {
            new ConexionBD().conexion();
        }

        this.tabla.setCursor(new Cursor(12));
        this.scroll.getViewport().setBackground(Color.WHITE);

        this.txtFecha.setDatoFecha(new Date());
        // el que formatea
        SimpleDateFormat formateador = new SimpleDateFormat("YYYY-MM-dd");

        Date date = this.txtFecha.getDatoFecha();

        Operaciones.setListarVentas(String.valueOf(formateador.format(date)));

        this.menu.add(pnlMenu);
        addEventKey();
    }

    private void addEventKey() {
        //--------------------------------------------------------------------------------
        KeyStroke f1 = KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0, false);
        Action f1Action = new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                // el que parsea
                SimpleDateFormat parseador = new SimpleDateFormat("dd/MM/yyyy");
                // el que formatea
                SimpleDateFormat formateador = new SimpleDateFormat("YYYY-MM-dd");

                if (txtFecha.getDatoFecha() == null) {
                    ErrorAlert e1 = new ErrorAlert(new JFrame(), true);
                    e1.msj1.setText("Selecciona una fecha.");
                    e1.msj2.setText("");
                    e1.msj3.setText("");
                    e1.setVisible(true);
                } else {

                    String fecha1 = String.valueOf(formateador.format(txtFecha.getDatoFecha()));

                    Impresion print = new Impresion(new JFrame(), true);
                    print.lblFecha.setText(fecha1);
                    print.setVisible(true);
                }
            }
        };
        this.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(f1, "F1");
        this.getActionMap().put("F1", f1Action);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMenu = new javax.swing.JPanel();
        btnDevolver = new rojeru_san.RSButtonRiple();
        menu = new rojerusan.RSPopuMenu();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnPrint = new rojeru_san.RSButtonRiple();
        btnConsultar = new rojeru_san.RSButtonRiple();
        txtFecha = new rojeru_san.componentes.RSDateChooser();
        scroll = new javax.swing.JScrollPane();
        tabla = new rojerusan.RSTableMetro();

        pnlMenu.setBackground(new java.awt.Color(255, 255, 255));

        btnDevolver.setBackground(new java.awt.Color(69, 87, 252));
        btnDevolver.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ventas/btn-devolucion.png"))); // NOI18N
        btnDevolver.setText("DEVOLVER");
        btnDevolver.setColorHover(new java.awt.Color(87, 103, 253));
        btnDevolver.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDevolver.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnDevolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMenuLayout = new javax.swing.GroupLayout(pnlMenu);
        pnlMenu.setLayout(pnlMenuLayout);
        pnlMenuLayout.setHorizontalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        pnlMenuLayout.setVerticalGroup(
            pnlMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnDevolver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        menu.setBackground(new java.awt.Color(255, 255, 255));
        menu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(247, 247, 247));

        jLabel10.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        jLabel10.setText("ÃšLTIMAS VENTAS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(69, 87, 252));

        btnPrint.setBackground(new java.awt.Color(69, 87, 252));
        btnPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/almacen/btn-imprimir.png"))); // NOI18N
        btnPrint.setText(" (F1)");
        btnPrint.setColorHover(new java.awt.Color(173, 187, 194));
        btnPrint.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPrint.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        btnConsultar.setBackground(new java.awt.Color(69, 87, 252));
        btnConsultar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ventas/lblReport.png"))); // NOI18N
        btnConsultar.setText("CONSULTAR");
        btnConsultar.setColorHover(new java.awt.Color(173, 187, 194));
        btnConsultar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnConsultar.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        txtFecha.setColorBackground(new java.awt.Color(69, 87, 252));
        txtFecha.setColorButtonHover(new java.awt.Color(173, 187, 194));
        txtFecha.setColorForeground(new java.awt.Color(0, 0, 0));
        txtFecha.setFormatoFecha("dd/MM/yyyy");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnConsultar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 452, Short.MAX_VALUE)
                .addComponent(btnPrint, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnConsultar, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
            .addComponent(btnPrint, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        scroll.setBorder(null);

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "#", "NÃºmero venta", "Cantidad", "CÃ³digo de barras", "DescripciÃ³n", "Precio", "Importe", "Hora", "Cajero", "utiliza_inventario", "fecha", "categoria", "precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setAltoHead(30);
        tabla.setColorBackgoundHead(new java.awt.Color(69, 87, 252));
        tabla.setColorBordeHead(new java.awt.Color(255, 255, 255));
        tabla.setColorFilasBackgound2(new java.awt.Color(240, 240, 240));
        tabla.setColorFilasForeground1(new java.awt.Color(0, 0, 0));
        tabla.setColorFilasForeground2(new java.awt.Color(0, 0, 0));
        tabla.setColorHoverBackgound(new java.awt.Color(69, 87, 252));
        tabla.setColorSelBackgound(new java.awt.Color(69, 87, 252));
        tabla.setFuenteHead(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        tabla.setGrosorBordeFilas(0);
        tabla.setHover(true);
        tabla.setMultipleSeleccion(false);
        tabla.setRowHeight(30);
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        scroll.setViewportView(tabla);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setMinWidth(0);
            tabla.getColumnModel().getColumn(0).setPreferredWidth(0);
            tabla.getColumnModel().getColumn(0).setMaxWidth(0);
            tabla.getColumnModel().getColumn(1).setPreferredWidth(120);
            tabla.getColumnModel().getColumn(1).setMaxWidth(1000);
            tabla.getColumnModel().getColumn(2).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(2).setMaxWidth(1000);
            tabla.getColumnModel().getColumn(5).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(5).setMaxWidth(1000);
            tabla.getColumnModel().getColumn(6).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(6).setMaxWidth(1000);
            tabla.getColumnModel().getColumn(7).setPreferredWidth(100);
            tabla.getColumnModel().getColumn(7).setMaxWidth(1000);
            tabla.getColumnModel().getColumn(9).setMinWidth(0);
            tabla.getColumnModel().getColumn(9).setPreferredWidth(0);
            tabla.getColumnModel().getColumn(9).setMaxWidth(0);
            tabla.getColumnModel().getColumn(10).setMinWidth(0);
            tabla.getColumnModel().getColumn(10).setPreferredWidth(0);
            tabla.getColumnModel().getColumn(10).setMaxWidth(0);
            tabla.getColumnModel().getColumn(11).setMinWidth(0);
            tabla.getColumnModel().getColumn(11).setPreferredWidth(0);
            tabla.getColumnModel().getColumn(11).setMaxWidth(0);
            tabla.getColumnModel().getColumn(12).setMinWidth(0);
            tabla.getColumnModel().getColumn(12).setPreferredWidth(0);
            tabla.getColumnModel().getColumn(12).setMaxWidth(0);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(scroll)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        if (this.txtFecha.getDatoFecha() != null) {
            // el que formatea
            SimpleDateFormat formateador = new SimpleDateFormat("YYYY-MM-dd");

            Date date = this.txtFecha.getDatoFecha();

            System.out.println(String.valueOf(formateador.format(date)));
            Operaciones.setListarVentas(String.valueOf(formateador.format(date)));
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // el que parsea
        SimpleDateFormat parseador = new SimpleDateFormat("dd/MM/yyyy");
        // el que formatea
        SimpleDateFormat formateador = new SimpleDateFormat("YYYY-MM-dd");

        if (this.txtFecha.getDatoFecha() == null) {
            ErrorAlert e = new ErrorAlert(new JFrame(), true);
            e.msj1.setText("Selecciona una fecha.");
            e.msj2.setText("");
            e.msj3.setText("");
            e.setVisible(true);
        } else {

            String fecha1 = String.valueOf(formateador.format(this.txtFecha.getDatoFecha()));

            Impresion print = new Impresion(new JFrame(), true);
            print.lblFecha.setText(fecha1);
            print.setVisible(true);
        }
    }//GEN-LAST:event_btnPrintActionPerformed

    private void btnDevolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverActionPerformed
        try {
            this.menu.setVisible(false);
            int fila = this.tabla.getSelectedRow();
            ModalDevolver m = new ModalDevolver(new JFrame(), true);
            m.lblCantidad.setText(this.tabla.getValueAt(fila, 2).toString());
            m.lblID.setText(this.tabla.getValueAt(fila, 0).toString());
            m.setVisible(true);

            // el que parsea
            SimpleDateFormat parseador = new SimpleDateFormat("dd/MM/yyyy");
            // el que formatea
            SimpleDateFormat formateador = new SimpleDateFormat("YYYY-MM-dd");
            java.util.Date fecha = parseador.parse(principal.pnlVentas.lblFecha.getFecha());

            if (m.continuar) {
                Sentencias_Dev s = new Sentencias_Dev();
                s.setIdVenta(id);
                s.setNumVenta(Integer.parseInt(this.tabla.getValueAt(fila, 1).toString()));
                s.setCodigoVenta(this.tabla.getValueAt(fila, 3).toString());
                s.setCantidadVenta(cantidad);

                double devuelto = cantidad * Double.parseDouble(this.tabla.getValueAt(fila, 5).toString());

                s.setImporteVenta(devuelto);

                s.setFechaVenta(String.valueOf(formateador.format(fecha)));
                s.setHoraVenta(principal.pnlVentas.lblHora.getHora());
                s.setCajero(this.tabla.getValueAt(fila, 8).toString());
                s.setCategoria(this.tabla.getValueAt(fila, 11).toString());
                s.setPrecio(Double.parseDouble(this.tabla.getValueAt(fila, 12).toString()));
                s.setPrecio_venta(Double.parseDouble(this.tabla.getValueAt(fila, 5).toString()));
                s.setDescripcion(this.tabla.getValueAt(fila, 4).toString());
                s.setMotivo(motivo);

                if (this.tabla.getValueAt(fila, 9).toString().equals("1")) {
                    s.setInventario_utiliza(true);

                    almacen.Sentencias s1 = new almacen.Sentencias();
                    int totalExistencias = almacen.Operaciones.getExistencias(this.tabla.getValueAt(fila, 3).toString()) + cantidad;
                    s1.setExistencias(totalExistencias);
                    s1.setCodigo(this.tabla.getValueAt(fila, 3).toString());

                    if (almacen.Operaciones.isEditadoAlmacen(s1)) {
                        System.out.println("Almacen sumado");
                        almacen.Operaciones.setListar("");
                    }

                } else {
                    s.setInventario_utiliza(false);
                }

//                if (Operaciones_dev.isExiste(id)) {
//                    
//                    int cantidadTotal = cantidad + Operaciones_dev.getCantidad(id);
//                    double importeTotal = cantidadTotal * Double.parseDouble(this.tabla.getValueAt(fila, 5).toString());
//                    
//                    s.setCantidadVenta(cantidadTotal);
//                    s.setImporteVenta(importeTotal);
//                    
//                    if (Operaciones_dev.isEditadoDevoluciones(s)) {
//                        System.out.println("DevoluciÃ³n restada");
//                        Operaciones_dev.setListar("");
//                    }
//                    
//                } else {
                if (Operaciones_dev.isRegistrado(s)) {
                    System.out.println("DevoluciÃ³n registrada");
                    Operaciones_dev.setListar("");
                }
//                }

                if (cantidad == Integer.parseInt(this.tabla.getValueAt(fila, 2).toString())) {

                    if (Operaciones_dev.isEliminado(id)) {
                        System.out.println("Registro eliminado");
                        Operaciones.setListarVentas("");
                    }
                } else {

                    int cantidadTotal = Integer.parseInt(this.tabla.getValueAt(fila, 2).toString()) - cantidad;
                    double importeTotal = cantidadTotal * Double.parseDouble(this.tabla.getValueAt(fila, 5).toString());

                    s.setCantidadVenta(cantidadTotal);
                    s.setImporteVenta(importeTotal);

                    if (Operaciones_dev.isEditadoVentas(s)) {
                        System.out.println("Registro restado");
                        Operaciones.setListarVentas("");
                    }
                }
            }
        } catch (ParseException ex) {
            Logger.getLogger(pnlVentasToDay.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDevolverActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        int row = tabla.rowAtPoint(evt.getPoint());
        if ((evt.getModifiers() & InputEvent.BUTTON3_MASK) == InputEvent.BUTTON3_MASK) {
            this.tabla.setRowSelectionInterval(row, row);
            PosicionMouse = evt.getY() / 16;
            menu.show(evt.getComponent(), evt.getX(), evt.getY());
        } else {
            this.tabla.setRowSelectionInterval(row, row);
        }
    }//GEN-LAST:event_tablaMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojeru_san.RSButtonRiple btnConsultar;
    private rojeru_san.RSButtonRiple btnDevolver;
    private rojeru_san.RSButtonRiple btnPrint;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private rojerusan.RSPopuMenu menu;
    private javax.swing.JPanel pnlMenu;
    private javax.swing.JScrollPane scroll;
    public static rojerusan.RSTableMetro tabla;
    public static rojeru_san.componentes.RSDateChooser txtFecha;
    // End of variables declaration//GEN-END:variables

    public void reporteVentas(String fecha1) {
        ConexionBD cc = new ConexionBD();

        Reportes r = new Reportes();

        try {
            String archivo = "reportes/VentasToDay.jasper";

            JasperReport jasperReport = (JasperReport) JRLoader.loadObject(new File(archivo));
            Map parametro = new HashMap();
            parametro.put("fecha", fecha1);
            JasperPrint jasperPrint = JasperFillManager.fillReport(jasperReport, parametro, cc.conect);

            JRViewer jrv = new JRViewer(jasperPrint);
            r.contenedor.removeAll();

            r.contenedor.setLayout(new BorderLayout());
            r.contenedor.add(jrv, BorderLayout.CENTER);

            r.contenedor.repaint();
            r.contenedor.revalidate();
            jrv.setVisible(true);
            r.setVisible(true);

            c.dispose();
        } catch (JRException ex) {
            c.dispose();
            System.err.println("Error iReport: " + ex.getMessage());
        }
    }
}
